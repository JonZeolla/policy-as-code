---
- name: Install prereq python packages
  ansible.builtin.pip:
    name: python-gitlab
    state: latest

- name: Retrieve and set external IP
  when: external_ip is not defined
  block:
    - name: Gather EC2 metadata
      amazon.aws.ec2_metadata_facts:

    - name: Set the external_ip fact to EC2 instance's public IPv4 IP
      ansible.builtin.set_fact:
        external_ip: "{{ ansible_ec2_public_ipv4 }}"

- name: Create a demo group
  community.general.gitlab_group:
    name: demo
    api_url: "http://{{ external_ip }}"
    api_username: root
    api_password: "{{ root_password }}"

- name: Add a user to a GitLab Group
  community.general.gitlab_group_members:
    api_url: "http://{{ external_ip }}"
    api_username: root
    api_password: "{{ root_password }}"
    gitlab_group: demo
    gitlab_user: root
    access_level: owner
    state: present

# Attempted to use import_url but kept getting 422 even after following https://docs.gitlab.com/ee/user/project/import/github.html#prerequisites
- name: Create the policy-as-code-demo project
  community.general.gitlab_project:
    name: policy-as-code-demo
    api_url: "http://{{ external_ip }}"
    api_username: root
    api_password: "{{ root_password }}"
    group: demo
    shared_runners_enabled: true
    squash_option: always

- name: Check if we've already setup the root SSH keys
  ansible.builtin.stat:
    path: /tmp/gitlab_keys
  register: gitlab_key_info

- name: Setup root SSH keys
  when: not gitlab_key_info.stat.exists
  block:
    - name: Generate SSH key for gitlab
      community.crypto.openssh_keypair:
        path: "{{ home_dir }}/.ssh/gitlab"

    - name: Render and copy SSH config
      ansible.builtin.template:
        src: config.j2
        dest: "{{ home_dir }}/.ssh/config"
        # This is the uid/gid of ec2-user on Amazon Linux 2 (AL2)
        owner: 1000
        group: 1000

    - name: Read SSH public key
      ansible.builtin.slurp:
        src: "{{ home_dir }}/.ssh/gitlab.pub"
      register: root_public_key

    - name: Attach the SSH public key to the root user in GitLab
      community.general.gitlab_user:
        api_url: "http://{{ external_ip }}"
        api_username: root
        api_password: "{{ root_password }}"
        username: "root"
        name: "root"
        email: "root@example.local"
        sshkey_name: "Auto created SSH key"
        sshkey_file: "{{ root_public_key.content | b64decode }}"

    - name: Flag SSH setup as successful
      ansible.builtin.file:
        path: /tmp/gitlab_keys
        state: touch

- name: Check if we've already mirrored policy-as-code-demo into GitLab
  ansible.builtin.stat:
    path: /tmp/gitlab_mirror
  register: gitlab_mirror_info

- name: Mirror the policy-as-code-demo repo into GitLab
  when: not gitlab_mirror_info.stat.exists
  block:
    - name: List the server SSH public keys
      ansible.builtin.find:
        paths: /etc/ssh
        patterns: "*.pub"
      register: ssh_pub_keys

    - name: Update known_hosts for each discovered server SSH public key
      ansible.builtin.include_tasks: update_known_hosts.yml
      with_items: "{{ ssh_pub_keys.files | map(attribute='path') | list }}"
      loop_control:
        loop_var: public_key

    # Using command instead of ansible.builtin.git due to issues cloning w/refspec and hanging after updating remotes (even though it succeeded)
    - name: Mirror policy-as-code-demo locally
      ansible.builtin.command:
        cmd: "git clone --mirror https://github.com/JonZeolla/policy-as-code-demo.git {{ home_dir }}/environment/policy-as-code-demo"

    - name: Setup the gitlab remote
      ansible.builtin.command:
        cmd: "git remote add gitlab ssh://git@{{ external_ip }}:2222/demo/policy-as-code-demo.git"
        chdir: "{{ home_dir }}/environment/policy-as-code-demo"

    - name: Push the mirror to gitlab
      ansible.builtin.command:
        cmd: "git push --mirror gitlab --force"
        chdir: "{{ home_dir }}/environment/policy-as-code-demo"

    - name: Flag mirror as successful
      ansible.builtin.file:
        path: /tmp/gitlab_mirror
        state: touch

- name: Login
  ansible.builtin.debug:
    msg: "You can now log into GitLab at http://{{ external_ip }} with username root and password {{ root_password }}"
